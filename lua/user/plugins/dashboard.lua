return {
  'glepnir/dashboard-nvim',
   event = 'VimEnter',
  config = function()
    local config = {
      theme = 'doom',
      config = {
        header = {
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚£§‚£§‚£¥‚£¶‚£§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£æ‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚°ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢ø‚£ø‚£ø‚£∂‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚£∂‚£∂‚£∂‚£∂‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚£º‚£ø‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚¢ª‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ß‚†Ä‚†Ä ',
          '‚†Ä‚¢∏‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚°á‚†Ä ',
          '‚†Ä‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚†Ä ',
          '‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚°ü‚¢π‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£π‚£ø‚£ø‚†Ä ',
          '‚†Ä‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚†è‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°ø‚†Ä ',
          '‚†Ä‚¢∏‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚°ø‚†É‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£∑‚£§‚£§‚°Ü‚†Ä‚†Ä‚£∞‚£ø‚£ø‚†á‚†Ä ',
          '‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†æ‚†ø‚†ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚°ø‚†ø‚†õ‚†Ä‚£∞‚£ø‚£ø‚°ü‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£ø‚£ß‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£∑‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£æ‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ',
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä '
        },
        center  = {
         {
          icon = 'üåë',
          icon_hl = 'group',
          desc = 'find files',
          desc_hl = 'group',
          key = 'SPC ff',
          key_hl = 'WildMenu',
          action = 'Telescope find_files',
        },
        {
          icon = 'üåë',
          icon_hl = 'group',
          desc = 'recent files',
          desc_hl = 'group',
          key = 'SPC TR',
          key_hl = 'group',
          action = 'Telescope oldfiles',
        },
        {
          icon = 'üåë',
          icon_hl = 'group',
          desc = 'new vertical file',
          desc_hl = 'group',
          key = 'SPC fv',
          key_hl = 'group',
          action = '<cmd>vsplit<cr>',
        },
        {
          icon = 'üåë',
          icon_hl = 'group',
          desc = 'new horizontal file',
          desc_hl = 'group',
          key = 'SPC fh',
          key_hl = 'group',
          action = '<cmd>split',
        }
        },
        packages = { enable = true },
        project = { limit = 8, action = 'Telescope find_files cwd='},
        mru = {limit = 10}
      }
    }
    local db = require("dashboard")
    -- db.custom_header = 
    --   db.custom_center  = {
    --     {icon = 'Ôú°  ', desc = 'Create new file                         ',
    --     action =  'DashboardNewFile',
    --     shortcut = 'SPC f n'},
    --     {icon = 'ÔÖú  ',
    --     desc = 'Find  Files                              ',
    --     action = 'Telescope find_files find_command=rg,--hidden,--files',
    --     shortcut = 'SPC f  '},
    --     {icon = ' ÔÜö  ',
    --     desc = 'Find  word                              ',
    --     action = 'Telescope live_grep',
    --     shortcut = 'Ctrl + t '},
    --     -- {icon = 'Ôê•  ',
    --     -- desc = 'Open Personal dotfiles                  ',
    --     -- action = 'Telescope dotfiles path=' .. home ..'/.dotfiles',
    --     -- shortcut = 'SPC f d'},
    --   }

    db.setup(config)

  end
}







-- db.custom_footer  -- type can be nil,table or function(must be return table in function)
-- db.preview_file_Path    -- string or function type that mean in function you can dynamic generate height width
-- db.preview_file_height  -- number type
-- db.preview_file_width   -- number type
-- db.preview_command      -- string type (can be ueberzug which only work in linux)
-- db.confirm_key          -- string type key that do confirm in center select
-- db.hide_statusline      -- boolean default is true.it will hide statusline in dashboard buffer and auto open in other buffer
-- db.hide_tabline         -- boolean default is true.it will hide tabline in dashboard buffer and auto open in other buffer
-- db.session_directory    -- string type the directory to store the session file
-- db.header_pad           -- number type default is 1
-- db.center_pad           -- number type default is 1
-- db.footer_pad           -- number type default is 1
